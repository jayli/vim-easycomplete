snippet const
	const ${1:name} = ${0:value};
snippet let
	let ${1:name} = ${0:value};
snippet im
	import ${1:mod_name} from '${0:mod_name}';
snippet cla
	class ${1:className} {
		${0://}
	}
snippet clax
	class ${1:classNameA} extends ${2:classNameB} {
		${0://}
	}
snippet =>
	(${1:name}) => {
		${0://}
	}
snippet af
	(${1:param}) => {
		${0://}
	}
snippet sym
	const ${1:name} = Symbol('${0:/*SymbolName*/}');
snippet ed
	export default ${0:sth}
